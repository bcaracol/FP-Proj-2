# TAD Coordenada

def cria_coordenada(lin, col):
	if not isinstance(lin, int) or not isinstance(col, int) or not lin >= 1 or not  col >= 1:
		raise ValueError('cria_coordenada: argumentos invalidos')
	return (lin, col)

def coordenada_linha(c):
	return c[0]

def coordenada_coluna(c):
	return c[1]

def e_coordenada(x):
	return isinstance(x, tuple) and isinstance(x[0], int) and isinstance(x[1], int) and x[0] >= 1 and x[1] >= 1

def coordenadas_iguais(c1, c2):
	return e_coordenada(c1) and e_coordenada(c2) and c1 == c2

def coordenada_para_cadeia(c):
	if e_coordenada(c):
		return "(" + str(c[0]) + " : " + str(c[1]) + ")"


# TAD Tabuleiro

def cria_tabuleiro(t):
	if not isinstance(t, tuple) or not len(t) == 2 or not len(t[0]) == len(t[1]):
		raise ValueError("cria_tabuleiro: argumentos invalidos")
	tab = {'cel': [[0 for x in range(len(t[1]))] for x in range(len(t[0]))], 'esp': t}
	return tab
	
def tabuleiro_dimensoes(tab):
	return (len(tab['esp'][0]), len(tab['esp'][1]))

def tabuleiro_especificacoes(tab):
	return tab['esp']

def tabuleiro_celula(tab, c):
	return
	
def e_tabuleiro(x):
	return
